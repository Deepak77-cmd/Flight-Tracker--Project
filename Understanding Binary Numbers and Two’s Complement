Understanding Binary Numbers and Two’s Complement

Binary numbers are the language of computers. Computers use just two digits — 0 and 1 — to perform every task. Binary is simple, efficient, and crucial for how computers process information.

How to Convert a Decimal Number to Binary:
Step 1 Divide the decimal number by 2.

Step 2 Record the remainder (it will be either 0 or 1).

Step 3 Continue dividing the quotient by 2 and recording the remainders until the quotient becomes 0.

Step 4 Finally, write down the remainders in reverse order — that's your binary number!

For example the Conversion of 45 to Binary is the following:-
45 ÷ 2 = 22, remainder 1
22 ÷ 2 = 11, remainder 0
11 ÷ 2 = 5, remainder 1
5 ÷ 2 = 2, remainder 1
2 ÷ 2 = 1, remainder 0
1 ÷ 2 = 0, remainder 1

if we Read the remainders backward, we get 101101.
For Double-Checking the Conversion:
Each digit in the binary number represents a power of 2:
(1 × 2⁵) = 32
(0 × 2⁴) = 0
(1 × 2³) = 8
(1 × 2²) = 4
(0 × 2¹) = 0
(1 × 2⁰) = 1
Add them up: 32 + 0 + 8 + 4 + 0 + 1 = 45

therefore, 101101 in binary equal to 45 in decimal.


Representing Negative Numbers with Two’s Complement
In computers, negative numbers are handled using something called two’s complement. This method makes operations like addition and subtraction much easier.

Step 1 Write the binary form of the positive number using 8 bits.
Step 2 Flip every bit (change 0s to 1s and 1s to 0s).
Step 3 Add 1 to the result.
For example: Converting -45 to Two’s Complement (8-bit)
Start with 45 in 8-bit binary: 00101101 (basically add 00 to to the number sot that it can become a 8 digit number)
Invert all bits: 11010010
Add 1:(11010010 + 1) 11010011
Thus, -45 in 8-bit two’s complement form is 11010011.
